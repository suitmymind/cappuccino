#!/bin/sh

# if OBJJ_HOME isn't set, try to determine it out
#if [ -z $OBJJ_HOME ]; then
    # get path of the executable
    SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH=$SELF_PATH/$(basename -- "$0")
    
    # resolve symlinks
    if [ -h $SELF_PATH ]; then
        SELF_PATH=`readlink $SELF_PATH`
    fi
    
    # get second ancestor directory
    SELF_DIR=`dirname $SELF_PATH`
    export OBJJ_HOME=`dirname $SELF_DIR`
    
    # check to ensure it exists, print message
#    if [ -d $OBJJ_HOME ]; then
#        echo "OBJJ_HOME not set, defaulting to $OBJJ_HOME" 1>&2
#    else
#        echo "OBJJ_HOME not set, default at $OBJJ_HOME doesn't exist, exiting" 1>&2 
#        exit 2
#    fi
#fi

OBJJ_LIB="$OBJJ_HOME/lib"
CLASSPATH="$OBJJ_LIB:$OBJJ_LIB/js.jar:$OBJJ_HOME/lib/$(basename $SELF_PATH):$CLASSPATH"

OBJJ="$OBJJ_LIB/objj.js"
RLWRAP=`which rlwrap`

# if there's a "lib" directory, add all the jars from it
if [ -d "lib" ]; then
    JARS=`find ./lib -name '*.jar' 2> /dev/null | tr "\n" ":"`
    CLASSPATH="$JARS:$CLASSPATH"
fi

# convert paths for Cygwin
if [ `uname` = CYGWIN* ]; then
    OBJJ_HOME=`cygpath -wp "$OBJJ_HOME"`
    OBJJ_LIB=`cygpath -wp "$OBJJ_LIB"`
    OBJJ=`cygpath -wp "$OBJJ"`
    CLASSPATH=`cygpath -wp "$CLASSPATH"`
fi

export OBJJ_LIB
echo $RLWRAP java -classpath $CLASSPATH main $@
#if [ -e $STEAM_BUILD/Objective-J.build/Release/Rhino ]; then
    $RLWRAP java -classpath $CLASSPATH main $@
    #$RLWRAP java -classpath $CLASSPATH org.mozilla.javascript.tools.shell.Main $OBJJ $@
#else
#    echo "Missing frameworks at $STEAM_BUILD/Objective-J.build/Release/Rhino" 1>&2
#fi
